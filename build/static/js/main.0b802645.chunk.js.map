{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","UserContext.ts","Pages/Landing/Landing.tsx","Components/CryptoContainer/CryptoContainer.tsx","Components/TradedCrypto/TradedCrypto.tsx","Components/Header/Header.tsx","Pages/Home/Home.tsx","Components/PortfolioContainer/PortfolioContainer.tsx","Pages/Portfolio/Portfolio.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","initialUser","localStorage","getItem","localUser","ownedCryptos","_id","email","balance","JSON","parse","userContextDefaultValue","user","updateUser","UserContext","createContext","initialState","password","error","isLoading","isLoggedIn","loginReducer","state","action","type","fieldName","payload","Landing","useContext","useReducer","dispatch","loginHandler","a","preventDefault","length","fetch","method","headers","body","stringify","response","json","responseData","ok","message","signupHandler","className","to","placeholder","value","onIonChange","target","disabled","color","onClick","size","CryptoContainer","props","isMobile","useMediaQuery","query","tradeCrypto","crypto","src","logo","alt","abbr","name","price","change","change_percent","market_cap","TradedCrypto","useEffect","forEach","oc","setAmountOfOwnedCrypto","parseFloat","useState","inputPrice","setInputPrice","currentSelection","setCurrentSelection","amountOfOwnedCrypto","setError","buyCryptoHandler","amount","close","sellCryptoHandler","isOpen","backdropDismiss","detail","charAt","toUpperCase","slice","Header","routePortfolio","routeHome","routeSignOut","Home","cryptoData","setCryptoData","signOut","setSignOut","buySell","setBuySell","portfolio","setPortfolio","tradedCrypto","setTradedCrypto","getCryptoData","cryptos","console","log","isSubscribed","foo","setTimeout","tradeCryptoHandler","undefined","c","key","PortfolioContaier","handleTrading","bind","Portfolio","portfolioItems","setPortfolioItems","cryptoNetWorth","setCryptoNetWorth","selectedCrypto","setSelectedCrypto","toHome","setToHome","loading","setLoading","trading","setTrading","getPortfolio","portfolioList","runningTotal","p","getUserFromLocalStorage","portfolioTimeout","handleClose","App","setUser","Provider","u","setItem","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kJAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,wBAAyB,CACxB,GACA,IAED,0BAA2B,CAC1B,GACA,IAED,sBAAuB,CACtB,GACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.0b802645.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t90,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t91,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t92,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t93,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t94,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t95,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t96,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t97,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t98,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t99,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t100,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t101,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t102,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t103,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t104,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t105,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t106,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t107,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t108,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t109,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t110,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t111,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t112,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t113,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t114,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t115,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t116,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t117,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t118,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t119,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t120,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t121,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t122,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t123,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t124,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t125,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t126,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t127,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t128,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t129,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t130,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t131,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t132,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 63;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t134,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 65;\nmodule.exports = webpackAsyncContext;","import { createContext } from \"react\";\r\nimport { User } from \"./Models/User\";\r\n\r\nexport interface UserContextData {\r\n  user: User;\r\n  updateUser: (user: User) => void;\r\n}\r\n\r\nconst initialUser = localStorage.getItem(\"user\");\r\nlet localUser = {\r\n  ownedCryptos: [],\r\n  _id: \"\",\r\n  email: \"\",\r\n  balance: 0,\r\n};\r\nif (initialUser !== null) {\r\n  localUser = JSON.parse(initialUser);\r\n}\r\n\r\nexport const userContextDefaultValue: UserContextData = {\r\n  user: localUser,\r\n  updateUser: (user: User) => null,\r\n};\r\n\r\nexport const UserContext = createContext<UserContextData>(\r\n  userContextDefaultValue\r\n);\r\n","import React, { useReducer, useContext } from \"react\";\r\nimport \"./Landing.css\";\r\n\r\nimport { UserContext } from \"../../UserContext\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport {\r\n  IonPage,\r\n  IonCard,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonButton,\r\n  IonInput,\r\n  IonItem,\r\n  IonCardHeader,\r\n  IonText,\r\n} from \"@ionic/react\";\r\n\r\nconst initialState: LoginState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: \"\",\r\n  isLoading: false,\r\n  isLoggedIn: false,\r\n};\r\n\r\ninterface LoginState {\r\n  email: string;\r\n  password: string;\r\n  isLoading: boolean;\r\n  error: string;\r\n  isLoggedIn: boolean;\r\n}\r\n\r\ntype LoginAction =\r\n  | { type: \"login\" | \"success\" | \"failure\" | \"error\" | \"logOut\" }\r\n  | {\r\n      type: \"field\";\r\n      fieldName: string;\r\n      payload: string | undefined | null | number;\r\n    };\r\n\r\nfunction loginReducer(state: LoginState, action: LoginAction) {\r\n  switch (action.type) {\r\n    case \"field\": {\r\n      return {\r\n        ...state,\r\n        [action.fieldName]: action.payload,\r\n      };\r\n    }\r\n\r\n    case \"login\": {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: \"\",\r\n      };\r\n    }\r\n\r\n    case \"success\": {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoading: false,\r\n        error: \"\",\r\n      };\r\n    }\r\n\r\n    case \"failure\": {\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        isLoading: false,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst Landing: React.FC<{}> = () => {\r\n  //User Context\r\n  const { updateUser } = useContext(UserContext);\r\n\r\n  const [state, dispatch] = useReducer(loginReducer, initialState);\r\n\r\n  const { email, password, error, isLoading, isLoggedIn } = state;\r\n\r\n  const loginHandler = async (e: any) => {\r\n    e.preventDefault();\r\n    if (password.length === 0 || email.length === 0) {\r\n      dispatch({\r\n        type: \"field\",\r\n        fieldName: \"error\",\r\n        payload: \"Email and/or Password is Empty\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"login\" });\r\n    try {\r\n      const response = await fetch(\r\n        \"https://bithive-crypto-exchange.herokuapp.com/api/users/login\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        dispatch({\r\n          type: \"field\",\r\n          fieldName: \"error\",\r\n          payload: responseData.message,\r\n        });\r\n        dispatch({ type: \"failure\" });\r\n      } else {\r\n        if (responseData.user) {\r\n          updateUser(responseData.user);\r\n          dispatch({ type: \"success\" });\r\n        } else {\r\n          dispatch({\r\n            type: \"field\",\r\n            fieldName: \"error\",\r\n            payload: \"Error logging user in\",\r\n          });\r\n          dispatch({ type: \"failure\" });\r\n        }\r\n        //dispatch({ type: \"success\" });\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"failure\" });\r\n    }\r\n  };\r\n\r\n  const signupHandler = async (e: any) => {\r\n    e.preventDefault();\r\n    if (password.length === 0 || email.length === 0) {\r\n      return;\r\n    }\r\n    dispatch({ type: \"login\" });\r\n    try {\r\n      const response = await fetch(\r\n        \"https://bithive-crypto-exchange.herokuapp.com/api/users/signup\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            email,\r\n            password,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        dispatch({\r\n          type: \"field\",\r\n          fieldName: \"error\",\r\n          payload: responseData.message,\r\n        });\r\n        dispatch({ type: \"failure\" });\r\n      } else {\r\n        if (responseData.user) {\r\n          updateUser(responseData.user);\r\n          dispatch({ type: \"success\" });\r\n        } else {\r\n          dispatch({ type: \"failure\" });\r\n        }\r\n      }\r\n    } catch (err) {\r\n      dispatch({ type: \"failure\" });\r\n      dispatch({\r\n        type: \"field\",\r\n        fieldName: \"error\",\r\n        payload: \"Error signing user up\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IonPage className=\"landing-page\">\r\n      <IonGrid className=\"main-grid\">\r\n        {isLoggedIn && <Redirect to=\"/Home\" />}\r\n        <IonCard className=\"ion-input-card\">\r\n          <IonCardHeader className=\"card-header\">\r\n            <IonGrid>\r\n              <IonRow>\r\n                <IonGrid>\r\n                  <IonRow>\r\n                    <IonCol className=\"landing-text-col\">\r\n                      <IonText className=\"card-title-text\">\r\n                        BitHive - Crypto Trading\r\n                      </IonText>\r\n                    </IonCol>\r\n                  </IonRow>\r\n                  <IonRow>\r\n                    <IonCol className=\"landing-error-col\">\r\n                      <IonText className=\"error-text\">{error}</IonText>\r\n                    </IonCol>\r\n                  </IonRow>\r\n                </IonGrid>\r\n              </IonRow>\r\n            </IonGrid>\r\n          </IonCardHeader>\r\n          <div className=\"landing-main-col\">\r\n            <IonCol>\r\n              <IonRow>\r\n                <IonItem className=\"email-item\">\r\n                  <IonInput\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onIonChange={(e) => {\r\n                      dispatch({\r\n                        type: \"field\",\r\n                        fieldName: \"email\",\r\n                        payload: (e.target as HTMLInputElement).value,\r\n                      });\r\n                    }}\r\n                  ></IonInput>\r\n                </IonItem>\r\n              </IonRow>\r\n              <IonRow>\r\n                <IonItem className=\"password-item\">\r\n                  <IonInput\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onIonChange={(e) =>\r\n                      dispatch({\r\n                        type: \"field\",\r\n                        fieldName: \"password\",\r\n                        payload: (e.target as HTMLInputElement).value,\r\n                      })\r\n                    }\r\n                  ></IonInput>\r\n                </IonItem>\r\n              </IonRow>\r\n              <IonRow className=\"submit-row\">\r\n                <IonButton\r\n                  disabled={isLoading}\r\n                  color=\"dark\"\r\n                  className=\"submit-item\"\r\n                  onClick={(e) => loginHandler(e)}\r\n                >\r\n                  Submit\r\n                </IonButton>\r\n              </IonRow>\r\n              <IonRow className=\"signup-row\">\r\n                <IonButton\r\n                  disabled={isLoading}\r\n                  color=\"dark\"\r\n                  className=\"signup-button\"\r\n                  onClick={(e) => signupHandler(e)}\r\n                >\r\n                  Sign-Up\r\n                </IonButton>\r\n              </IonRow>\r\n              <IonRow className=\"helper-row\">\r\n                <IonCol size=\"9\" className=\"helper-col1\">\r\n                  <IonText>Don't have an account?</IonText>\r\n                </IonCol>\r\n              </IonRow>\r\n              <IonRow className=\"helper-row\">\r\n                <IonCol className=\"helper-col2\">\r\n                  <IonText>\r\n                    Enter a valid email and password and click Sign-Up\r\n                  </IonText>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonCol>\r\n          </div>\r\n        </IonCard>\r\n      </IonGrid>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import {\r\n  IonCard,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonText,\r\n  IonButton,\r\n} from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport { Crypto } from \"../../Models/Crypto\";\r\nimport \"./CryptoContainer.css\";\r\n\r\ninterface Props {\r\n  crypto: Crypto;\r\n  tradeCrypto: (crypto: Crypto) => void;\r\n}\r\n\r\nconst CryptoContainer: React.FC<Props> = (props) => {\r\n  const isMobile = useMediaQuery({ query: `(max-width: 1024px)` });\r\n  const mobileTrade = () => {\r\n    if (isMobile) {\r\n      props.tradeCrypto(props.crypto);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IonCard onClick={mobileTrade} className=\"container-card\">\r\n      <IonGrid>\r\n        <IonRow>\r\n          <IonCol>\r\n            <IonGrid>\r\n              <IonRow>\r\n                <IonCol>\r\n                  <img src={props.crypto.logo} alt=\"crypto-logo\" />\r\n                </IonCol>\r\n                <IonCol className=\"crypto-abbr-col\">\r\n                  <IonText className=\"crypto-text\">{props.crypto.abbr}</IonText>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonGrid>\r\n          </IonCol>\r\n          <IonCol className=\"crypto-col crypto-name\">\r\n            <IonText className=\"crypto-text\">{props.crypto.name}</IonText>\r\n          </IonCol>\r\n          <IonCol className=\"crypto-col crypto-price\">\r\n            <IonText className=\"crypto-text\">{props.crypto.price}</IonText>\r\n          </IonCol>\r\n          <IonCol className=\"crypto-col crypto-change\">\r\n            <IonText className=\"crypto-text\">{props.crypto.change}</IonText>\r\n          </IonCol>\r\n          <IonCol className=\"crypto-col crypto-percent-change\">\r\n            <IonText className=\"crypto-text\">\r\n              {props.crypto.change_percent}\r\n            </IonText>\r\n          </IonCol>\r\n          <IonCol className=\"crypto-col crypto-market-cap\">\r\n            <IonText className=\"crypto-text\">{props.crypto.market_cap}</IonText>\r\n          </IonCol>\r\n          <IonCol className=\"crypto-buy-sell-btn\">\r\n            <IonButton\r\n              color=\"dark\"\r\n              onClick={() => props.tradeCrypto(props.crypto)}\r\n            >\r\n              Buy/Sell\r\n            </IonButton>\r\n          </IonCol>\r\n        </IonRow>\r\n      </IonGrid>\r\n    </IonCard>\r\n  );\r\n};\r\n\r\nexport default CryptoContainer;\r\n","import {\r\n  IonButton,\r\n  IonCol,\r\n  IonGrid,\r\n  IonInput,\r\n  IonLabel,\r\n  IonModal,\r\n  IonRow,\r\n  IonSegment,\r\n  IonSegmentButton,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { Crypto } from \"../../Models/Crypto\";\r\nimport { UserContext } from \"../../UserContext\";\r\n\r\nimport \"./TradedCrypto.css\";\r\n\r\ninterface Props {\r\n  close: () => void;\r\n  crypto: Crypto;\r\n}\r\n\r\nconst TradedCrypto: React.FC<Props> = (props) => {\r\n  const { user, updateUser } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    user.ownedCryptos.forEach((oc) => {\r\n      if (oc[0] === props.crypto.abbr) {\r\n        setAmountOfOwnedCrypto(parseFloat(oc[1]));\r\n      }\r\n    });\r\n  });\r\n\r\n  const [inputPrice, setInputPrice] = useState<string>(\"0\");\r\n  const [currentSelection, setCurrentSelection] = useState<string | undefined>(\r\n    \"Buy\"\r\n  );\r\n  const [amountOfOwnedCrypto, setAmountOfOwnedCrypto] = useState<number>(0);\r\n  const [error, setError] = useState<string>(\"\");\r\n\r\n  const buyCryptoHandler = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://bithive-crypto-exchange.herokuapp.com/api/users/addCrypto\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: user._id,\r\n            abbr: props.crypto.abbr,\r\n            amount: parseFloat(inputPrice) / props.crypto.price,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n      //console.log(\"responseData: \", responseData);\r\n\r\n      if (!response.ok) {\r\n        setError(responseData.message);\r\n      } else {\r\n        //console.log(\"RESPONSEDATA.USER: \", responseData.user);\r\n        updateUser(responseData.user);\r\n        props.close();\r\n      }\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  const sellCryptoHandler = async () => {\r\n    //console.log(\"selling crypto\");\r\n    try {\r\n      const response = await fetch(\r\n        \"https://bithive-crypto-exchange.herokuapp.com/api/users/sellCrypto\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: user._id,\r\n            abbr: props.crypto.abbr,\r\n            amount: parseFloat(inputPrice) / props.crypto.price,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n\r\n      //console.log(\"responseData: \", responseData);\r\n\r\n      if (!response.ok) {\r\n        setError(responseData.message);\r\n      } else {\r\n        updateUser(responseData.user);\r\n        props.close();\r\n      }\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-wrapper\">\r\n      <IonModal isOpen={true} backdropDismiss={false}>\r\n        <IonSegment\r\n          value={currentSelection}\r\n          onIonChange={(e) => {\r\n            setCurrentSelection(e.detail.value);\r\n          }}\r\n        >\r\n          <IonSegmentButton value=\"Buy\" className=\"buy-button\">\r\n            <IonLabel>Buy</IonLabel>\r\n          </IonSegmentButton>\r\n          <IonSegmentButton value=\"Sell\" className=\"sell-button\">\r\n            <IonLabel>Sell</IonLabel>\r\n          </IonSegmentButton>\r\n        </IonSegment>\r\n        <IonGrid className=\"trade-grid\">\r\n          <IonRow className=\"first-row\">\r\n            <div className=\"name-col\">\r\n              <IonCol>\r\n                <IonText>\r\n                  {props.crypto.name.charAt(0).toUpperCase() +\r\n                    props.crypto.name.slice(1)}\r\n                </IonText>\r\n              </IonCol>\r\n            </div>\r\n\r\n            <IonCol className=\"price-col\">\r\n              <IonText>${props.crypto.price}</IonText>\r\n            </IonCol>\r\n          </IonRow>\r\n          <IonRow className=\"price-input-row\">\r\n            <IonCol className=\"price-input-col\">\r\n              <IonInput\r\n                type=\"number\"\r\n                placeholder=\"$0\"\r\n                className=\"price-input\"\r\n                onIonChange={(e) => {\r\n                  setInputPrice((e.target as HTMLInputElement).value);\r\n                }}\r\n              />\r\n            </IonCol>\r\n          </IonRow>\r\n          <IonRow className=\"calculated-crypto-row\">\r\n            <IonCol>\r\n              <IonText>\r\n                = {parseFloat(inputPrice) / props.crypto.price}{\" \"}\r\n                {props.crypto.abbr}\r\n              </IonText>\r\n            </IonCol>\r\n          </IonRow>\r\n          <div className=\"owned-crypto-and-balance\">\r\n            <div className=\"owned-crypto\">\r\n              <IonRow>\r\n                <IonCol>\r\n                  <IonText>Owned {props.crypto.name}:</IonText>\r\n                </IonCol>\r\n              </IonRow>\r\n              <IonRow>\r\n                <IonCol>\r\n                  <IonText>\r\n                    {amountOfOwnedCrypto} {props.crypto.abbr} = $\r\n                    {amountOfOwnedCrypto * props.crypto.price}\r\n                  </IonText>\r\n                </IonCol>\r\n              </IonRow>\r\n            </div>\r\n            <IonRow>\r\n              <div className=\"calculated-balance\">\r\n                <IonCol>\r\n                  <IonText>Calculated Balance:</IonText>\r\n                </IonCol>\r\n                <IonCol>\r\n                  {currentSelection === \"Buy\" ? (\r\n                    <IonText>${user.balance - parseFloat(inputPrice)}</IonText>\r\n                  ) : (\r\n                    <IonText>${user.balance + parseFloat(inputPrice)}</IonText>\r\n                  )}\r\n                </IonCol>\r\n              </div>\r\n            </IonRow>\r\n          </div>\r\n          <IonRow className=\"button-row\">\r\n            <IonCol className=\"buy-sell-button-col\">\r\n              <IonButton\r\n                className=\"buy-sell-btn\"\r\n                onClick={\r\n                  currentSelection === \"Buy\"\r\n                    ? () => buyCryptoHandler()\r\n                    : () => sellCryptoHandler()\r\n                }\r\n              >\r\n                {currentSelection}\r\n              </IonButton>\r\n            </IonCol>\r\n            <IonCol className=\"cancel-button-col\">\r\n              <IonButton className=\"cancel-btn\" onClick={props.close}>\r\n                Cancel\r\n              </IonButton>\r\n            </IonCol>\r\n          </IonRow>\r\n          <IonRow className=\"error-row\">\r\n            <IonCol>\r\n              <IonText className=\"error-text\">{error}</IonText>\r\n            </IonCol>\r\n          </IonRow>\r\n        </IonGrid>\r\n      </IonModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradedCrypto;\r\n","import { IonButton, IonHeader, IonTitle, IonToolbar } from \"@ionic/react\";\r\nimport React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\ninterface Props {\r\n  routeHome?: () => void;\r\n  routePortfolio?: () => void;\r\n  routeSignOut: () => void;\r\n}\r\n\r\nconst Header: React.FC<Props> = (props) => {\r\n  return (\r\n    <IonHeader className=\"home-header\">\r\n      <IonToolbar className=\"header-toolbar header-title-toolbar\">\r\n        <IonTitle className=\"header-title-text header-button\">\r\n          BitHive - Crypto Trading\r\n        </IonTitle>\r\n      </IonToolbar>\r\n      <IonToolbar\r\n        className={`header-toolbar portfolio-${props.routePortfolio}`}\r\n      >\r\n        <IonButton\r\n          color=\"dark\"\r\n          className=\"header-button\"\r\n          onClick={props.routePortfolio}\r\n        >\r\n          Portfolio\r\n        </IonButton>\r\n      </IonToolbar>\r\n      <IonToolbar className={`header-toolbar home-${props.routeHome}`}>\r\n        <IonButton\r\n          color=\"dark\"\r\n          className=\"header-button\"\r\n          onClick={props.routeHome}\r\n        >\r\n          Prices\r\n        </IonButton>\r\n      </IonToolbar>\r\n      <IonToolbar className=\"header-toolbar\">\r\n        <IonButton\r\n          color=\"dark\"\r\n          className=\"header-button\"\r\n          onClick={props.routeSignOut}\r\n        >\r\n          Sign-out\r\n        </IonButton>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n  IonLoading,\r\n  IonPage,\r\n  IonGrid,\r\n  IonRow,\r\n  IonCol,\r\n  IonCard,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport CryptoContainer from \"../../Components/CryptoContainer/CryptoContainer\";\r\nimport { Crypto } from \"../../Models/Crypto\";\r\nimport TradedCrypto from \"../../Components/TradedCrypto/TradedCrypto\";\r\nimport \"./Home.css\";\r\nimport Header from \"../../Components/Header/Header\";\r\n\r\nconst Home: React.FC<{}> = () => {\r\n  //Storing all of the crypto\r\n  const [cryptoData, setCryptoData] = useState<Crypto[]>();\r\n\r\n  const [signOut, setSignOut] = useState<Boolean>(false);\r\n\r\n  const [buySell, setBuySell] = useState<Boolean>(false);\r\n\r\n  const [portfolio, setPortfolio] = useState<Boolean>(false);\r\n\r\n  //Storing the current state of the crypto that is being bought or sold\r\n  const [tradedCrypto, setTradedCrypto] = useState<Crypto>({\r\n    name: \"\",\r\n    abbr: \"\",\r\n    change: \"\",\r\n    change_percent: \"\",\r\n    market_cap: \"\",\r\n    price: 0,\r\n    logo: \"\",\r\n  });\r\n\r\n  const getCryptoData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://bithive-crypto-exchange.herokuapp.com/api/cryptocurrencies/\"\r\n      );\r\n      const responseData = await response.json();\r\n\r\n      if (!response) {\r\n        console.log(responseData.message);\r\n      } else {\r\n        setCryptoData(responseData.cryptos);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    function foo() {\r\n      if (isSubscribed) {\r\n        getCryptoData();\r\n        setTimeout(foo, 90000);\r\n      }\r\n    }\r\n    foo();\r\n\r\n    return function cleanup() {\r\n      isSubscribed = false;\r\n    };\r\n  }, []);\r\n\r\n  const tradeCryptoHandler = (crypto: Crypto) => {\r\n    setBuySell(true);\r\n    setTradedCrypto(crypto);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setBuySell(false);\r\n  };\r\n\r\n  return (\r\n    <IonPage className=\"home-ion-page\">\r\n      {signOut && <Redirect to=\"/\" />}\r\n      {buySell && <TradedCrypto close={closeModal} crypto={tradedCrypto} />}\r\n      {portfolio && <Redirect to=\"/portfolio\" />}\r\n      <Header\r\n        routePortfolio={() => setPortfolio(true)}\r\n        routeSignOut={() => setSignOut(true)}\r\n      />\r\n      <div className=\"crypto-container-div\">\r\n        {cryptoData !== undefined ? (\r\n          <IonGrid className=\"crypto-grid\">\r\n            <IonCard>\r\n              <IonGrid>\r\n                <IonRow>\r\n                  <IonCol className=\"home-name-label\">\r\n                    <IonText>Name</IonText>\r\n                  </IonCol>\r\n                  <IonCol className=\"home-price-label\">\r\n                    <IonText>Price</IonText>\r\n                  </IonCol>\r\n                  <IonCol className=\"home-change-label\">\r\n                    <IonText>Change/24H</IonText>\r\n                  </IonCol>\r\n                  <IonCol className=\"home-change-per-label\">\r\n                    <IonText>Change%</IonText>\r\n                  </IonCol>\r\n                  <IonCol className=\"home-market-label\">\r\n                    <IonText>Market Cap</IonText>\r\n                  </IonCol>\r\n                </IonRow>\r\n              </IonGrid>\r\n            </IonCard>\r\n\r\n            {cryptoData.map((c) => (\r\n              <IonRow key={c.abbr} className=\"crypto-row\">\r\n                <IonCol size=\"12\" className=\"crypto-col\">\r\n                  <CryptoContainer\r\n                    crypto={c}\r\n                    tradeCrypto={tradeCryptoHandler}\r\n                  />\r\n                </IonCol>\r\n              </IonRow>\r\n            ))}\r\n          </IonGrid>\r\n        ) : (\r\n          <IonLoading isOpen={true} message={\"Please wait...\"} />\r\n        )}\r\n      </div>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport {\r\n  IonButton,\r\n  IonCard,\r\n  IonCol,\r\n  IonGrid,\r\n  IonRow,\r\n  IonText,\r\n} from \"@ionic/react\";\r\n\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport { PortfolioItem } from \"../../Models/PortfolioItem\";\r\n\r\nimport \"./PortfolioContainer.css\";\r\n\r\ninterface Props {\r\n  crypto: PortfolioItem;\r\n  handleTrading: (abbr: string) => void;\r\n}\r\n\r\nconst PortfolioContaier: React.FC<Props> = (props) => {\r\n  const isMobile = useMediaQuery({ query: `(max-width: 1024px)` });\r\n\r\n  const mobileTrade = () => {\r\n    if (isMobile) {\r\n      props.handleTrading(props.crypto.abbr);\r\n    }\r\n  };\r\n  return (\r\n    <IonCard onClick={mobileTrade} className=\"portfolio-container-card\">\r\n      <IonGrid>\r\n        <IonRow>\r\n          <IonCol className=\"property-col translate-p port-container-name\">\r\n            <IonText className=\"property-text\">{props.crypto.name}</IonText>\r\n          </IonCol>\r\n          <IonCol className=\"property-col translate-p port-container-price\">\r\n            <IonText>${props.crypto.price}</IonText>\r\n          </IonCol>\r\n          <IonCol className=\"property-col translate-p port-container-amount\">\r\n            <IonText>{props.crypto.amount}</IonText>\r\n          </IonCol>\r\n          <IonCol className=\"property-col translate-p\">\r\n            <IonText>\r\n              ${parseFloat(props.crypto.amount) * props.crypto.price}\r\n            </IonText>\r\n          </IonCol>\r\n          <IonCol className=\"property-col port-container-buy-sell\">\r\n            <IonButton\r\n              color=\"dark\"\r\n              onClick={props.handleTrading.bind(null, props.crypto.abbr)}\r\n            >\r\n              BUY/SELL\r\n            </IonButton>\r\n          </IonCol>\r\n        </IonRow>\r\n      </IonGrid>\r\n    </IonCard>\r\n  );\r\n};\r\n\r\nexport default PortfolioContaier;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { UserContext } from \"../../UserContext\";\r\nimport { PortfolioItem } from \"../../Models/PortfolioItem\";\r\nimport PortfolioContainer from \"../../Components/PortfolioContainer/PortfolioContainer\";\r\nimport {\r\n  IonCard,\r\n  IonCol,\r\n  IonGrid,\r\n  IonLoading,\r\n  IonPage,\r\n  IonRow,\r\n  IonText,\r\n} from \"@ionic/react\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Header from \"../../Components/Header/Header\";\r\nimport TradedCrypto from \"../../Components/TradedCrypto/TradedCrypto\";\r\nimport { Crypto } from \"../../Models/Crypto\";\r\n\r\nimport \"./Portfolio.css\";\r\n\r\nconst Portfolio: React.FC<{}> = () => {\r\n  //User Context\r\n  const { user, updateUser } = useContext(UserContext);\r\n  const [error, setError] = useState<string>(\"\");\r\n  const [portfolioItems, setPortfolioItems] = useState<PortfolioItem[]>();\r\n  const [cryptoNetWorth, setCryptoNetWorth] = useState<number>(0);\r\n\r\n  // Crypto from PortfolioContainer that will be sent to Buy/Sell component\r\n  const [selectedCrypto, setSelectedCrypto] = useState<Crypto>({\r\n    name: \"\",\r\n    abbr: \"\",\r\n    change: \"\",\r\n    change_percent: \"\",\r\n    market_cap: \"\",\r\n    price: 0,\r\n    logo: \"\",\r\n  });\r\n\r\n  // Boolean states to route to different parts of app or for logic involving certain user requirements\r\n  const [toHome, setToHome] = useState<Boolean>(false);\r\n  const [signOut, setSignOut] = useState<Boolean>(false);\r\n  const [loading, setLoading] = useState<Boolean>(true);\r\n  const [trading, setTrading] = useState<Boolean>(false);\r\n\r\n  const getPortfolio = async () => {\r\n    //console.log(\"getPortoflio user: \", user);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://bithive-crypto-exchange.herokuapp.com/api/users/getPortfolio\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: user._id,\r\n          }),\r\n        }\r\n      );\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setError(\"Error getting the user's portfolio data\");\r\n      } else {\r\n        //console.log(responseData.portfolioList);\r\n        await setPortfolioItems(responseData.portfolioList);\r\n        if (responseData.portfolioList) {\r\n          let runningTotal = 0;\r\n          responseData.portfolioList?.forEach((p: PortfolioItem) => {\r\n            runningTotal += parseFloat(p.amount) * p.price;\r\n          });\r\n\r\n          setCryptoNetWorth(runningTotal);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    function getUserFromLocalStorage() {\r\n      if (!user._id) {\r\n        let localUser = localStorage.getItem(\"user\");\r\n        if (localUser !== null) {\r\n          updateUser(JSON.parse(localUser));\r\n        }\r\n      }\r\n    }\r\n\r\n    function portfolioTimeout() {\r\n      if (isSubscribed) {\r\n        getPortfolio();\r\n        setTimeout(portfolioTimeout, 90000);\r\n      }\r\n    }\r\n\r\n    getUserFromLocalStorage();\r\n    portfolioTimeout();\r\n\r\n    return function cleanup() {\r\n      isSubscribed = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleTrading = async (abbr: string) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://bithive-crypto-exchange.herokuapp.com/api/cryptocurrencies/getByAbbr/${abbr}`\r\n      );\r\n      const responseData = await response.json();\r\n\r\n      if (!response) {\r\n        console.log(responseData.message);\r\n      } else {\r\n        setSelectedCrypto(responseData.crypto);\r\n        setTrading(true);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleClose = async () => {\r\n    setTrading(false);\r\n    setLoading(true);\r\n    await getPortfolio();\r\n    setLoading(false);\r\n    //console.log(\"port items: \", portfolioItems);\r\n  };\r\n\r\n  return (\r\n    <IonPage className=\"portfolio-page\">\r\n      {/* {console.log(\"OWNED: \", user.ownedCryptos)}\r\n      {console.log(\"Portfolio Items Render: \", portfolioItems)} */}\r\n      {toHome && <Redirect to=\"/home\" />}\r\n      {signOut && <Redirect to=\"/\" />}\r\n      {trading && (\r\n        <TradedCrypto close={() => handleClose()} crypto={selectedCrypto} />\r\n      )}\r\n      {loading && !error ? (\r\n        <IonLoading isOpen={true} message={\"Please wait...\"} />\r\n      ) : !error ? (\r\n        <div className=\"overflow-div\">\r\n          <Header\r\n            routeHome={() => setToHome(true)}\r\n            routeSignOut={() => setSignOut(true)}\r\n          />\r\n          <IonCard className=\"header-card\">\r\n            <IonGrid>\r\n              <div className=\"portfolio-subheader-div\">\r\n                <IonRow>\r\n                  <IonCol>\r\n                    <IonText className=\"portfolio-subheader-text\">\r\n                      User Balance: ${user.balance}\r\n                    </IonText>\r\n                  </IonCol>\r\n                </IonRow>\r\n                <IonRow>\r\n                  <IonCol>\r\n                    <IonText className=\"portfolio-subheader-text\">\r\n                      Portfolio Worth: ${cryptoNetWorth}\r\n                    </IonText>\r\n                  </IonCol>\r\n                </IonRow>\r\n              </div>\r\n            </IonGrid>\r\n          </IonCard>\r\n\r\n          {portfolioItems && !error ? (\r\n            <div className=\"portfolio-main-div\">\r\n              <IonCard className=\"portfolio-container-card portfolio-margin\">\r\n                <IonGrid>\r\n                  <IonRow>\r\n                    <IonCol className=\"portfolio-property-col\">\r\n                      <IonText className=\"portfolio-property-col-text\">\r\n                        Name\r\n                      </IonText>\r\n                    </IonCol>\r\n                    <IonCol className=\"portfolio-property-col\">\r\n                      <IonText className=\"portfolio-property-col-text\">\r\n                        Price\r\n                      </IonText>\r\n                    </IonCol>\r\n                    <IonCol className=\"portfolio-property-col\">\r\n                      <IonText className=\"portfolio-property-col-text\">\r\n                        Amount\r\n                      </IonText>\r\n                    </IonCol>\r\n                    <IonCol className=\"portfolio-property-col asset-worth-col\">\r\n                      <IonText className=\"portfolio-property-col-text\">\r\n                        Asset Worth\r\n                      </IonText>\r\n                    </IonCol>\r\n                    <IonCol></IonCol>\r\n                  </IonRow>\r\n                </IonGrid>\r\n              </IonCard>\r\n              {portfolioItems.map((p) => (\r\n                <div key={p.price}>\r\n                  <PortfolioContainer\r\n                    crypto={p}\r\n                    handleTrading={(abbr: string) => handleTrading(abbr)}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div>No Cryptos</div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h1>{error}</h1>\r\n        </div>\r\n      )}\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React, { useState } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { IonApp, IonRouterOutlet } from \"@ionic/react\";\nimport { IonReactRouter } from \"@ionic/react-router\";\nimport { User } from \"./Models/User\";\nimport { UserContext } from \"./UserContext\";\n\nimport Landing from \"./Pages/Landing/Landing\";\nimport Home from \"./Pages/Home/Home\";\nimport Portfolio from \"./Pages/Portfolio/Portfolio\";\n\n/* Core CSS required for Ionic components to work properly */\nimport \"@ionic/react/css/core.css\";\n\n/* Basic CSS for apps built with Ionic */\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\n\n/* Optional CSS utils that can be commented out */\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\n\n/* Theme variables */\nimport \"./theme/variables.css\";\n\nconst App: React.FC = () => {\n  const initialUser = localStorage.getItem(\"user\");\n  let localUser = {\n    ownedCryptos: [],\n    _id: \"\",\n    email: \"\",\n    balance: 0,\n  };\n  if (initialUser !== null) {\n    localUser = JSON.parse(initialUser);\n  }\n\n  const [user, setUser] = useState<User>(localUser);\n\n  const updateUser = (u: User) => {\n    //console.log(\"APP USER: \", u);\n    localStorage.setItem(\"user\", JSON.stringify(u));\n    setUser(u);\n  };\n\n  return (\n    <UserContext.Provider value={{ user, updateUser }}>\n      <IonApp>\n        <IonReactRouter>\n          <IonRouterOutlet>\n            <Switch>\n              <Route path=\"/\" exact={true}>\n                <Landing />\n              </Route>\n\n              <Route path=\"/Home\" exact={true}>\n                <Home />\n              </Route>\n\n              <Route path=\"/Portfolio\" exact={true}>\n                <Portfolio />\n              </Route>\n              <Redirect to=\"/\" />\n            </Switch>\n          </IonRouterOutlet>\n        </IonReactRouter>\n      </IonApp>\n    </UserContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}